name: AzureWebDeployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Terraform Init
        run: terraform init
        working-directory: infrastructure

      - name: Terraform Validate
        run: terraform validate
        working-directory: infrastructure

      - name: Terraform Plan
        id: terraform-plan
        run: terraform plan -out=tfplan
        working-directory: infrastructure
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: infrastructure
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}


      - name: Wait for DNS Propagation
        run: sleep 60

      - name: Export Terraform Outputs
        id: export-outputs
        run: |
          terraform output -json > outputs.json
        working-directory: infrastructure

      - name: Upload Terraform Outputs
        uses: actions/upload-artifact@v4
        with:
          name: terraform-outputs
          path: infrastructure/outputs.json

  validate_html:
    name: Validate HTML/CSS and Links
    runs-on: ubuntu-latest
    needs: terraform

    env:
      HTML_FILES_PATH: "./webpage/html5-boilerplate-main/dist"
      CSS_FILES_PATH: "./webpage/html5-boilerplate-main/dist"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Terraform Outputs
        uses: actions/download-artifact@v4
        with:
          name: terraform-outputs

      - name: Install tidy
        run: sudo apt-get update && sudo apt-get install -y tidy

      - name: Install stylelint
        run: |
          npm install -g stylelint
          npm install -g stylelint-config-standard

      - name: Validate HTML Files
        run: |
          for file in $(find $HTML_FILES_PATH -name "*.html"); do
            tidy -q -e "$file" || true
          done
        continue-on-error: true

      - name: Validate CSS Files
        run: |
          for file in $(find $CSS_FILES_PATH -name "*.css"); do
            stylelint "$file" || true
          done
        continue-on-error: true

      - name: Check Links in HTML
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          folder: ${{ env.HTML_FILES_PATH }}
        continue-on-error: true

  build:
    name: Build Node.js App
    runs-on: ubuntu-latest
    needs: [terraform, validate_html]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install
        working-directory: webpage/html5-boilerplate-main

      - name: Build the app
        run: npm run build --if-present
        working-directory: webpage/html5-boilerplate-main

      - name: Run tests
        run: npm run test --if-present
        working-directory: webpage/html5-boilerplate-main

      - name: Zip deployment package
        run: zip release.zip ./* -r
        working-directory: webpage/html5-boilerplate-main

      - name: Upload deployment artifact
        uses: actions/upload-artifact@v4
        with:
          name: nodejs-app
          path: webpage/html5-boilerplate-main/release.zip        

  deploy:
    name: Deploy Node.js App
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download deployment artifact
        uses: actions/download-artifact@v4
        with:
          name: nodejs-app

      - name: Wait Before Deployment
        run: sleep 30

      - name: Unzip deployment artifact
        run: unzip release.zip

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: JBportfolioAppService2
          slot-name: production
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: ./dist

  lighthouse:
    name: Lighthouse Audits
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Install Lighthouse
        run: npm install -g lighthouse

      - name: Wait for App Service URL
        run: sleep 300

      - name: Run Lighthouse Audits
        run: |
          lighthouse https://JBportfolioAppService2.azurewebsites.net \
            --output=json --output=html \
            --output-path=./lighthouse-report.html

      - name: Upload Lighthouse Report
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: ./lighthouse-report.html
